{{- $store := (input "developmentStore") -}}
{{- $require_tmstore := (eq $store "tmstore") -}}
{
  "name": "{{input `name`}}",
  "author": "{{input `author`}}",
  "description": "{{input `description`}}",
  "license": "SEE LICENSE IN LICENSE",
  "scripts": {
{{- if eq (input `useGit`) `y` }}
{{- if $require_tmstore }}
    "init": "indigo-cli run tm:init && git init && git add .",
    "init:linux": "indigo-cli run tm:init && indigo-cli run tm:post-init:linux && indigo-cli run monitoring:post-init:linux && git init && git add .",
{{- else }}
    "init": "git init && git add .",
    "init:linux": "indigo-cli run monitoring:post-init:linux",
{{- end}}
{{- else if $require_tmstore }}
    "init": "indigo-cli run tm:init",
    "init:linux": "indigo-cli run tm:init && indigo-cli run tm:post-init:linux && indigo-cli run monitoring:post-init:linux",
{{- end}}
    "monitoring:post-init:linux": "./arch/linux/fix-monitoring-files-ownership.sh",
{{- if eq $store "tmstore" }}
    "tm:init": "docker run -it --rm -v \"$(pwd)/tendermint:/tendermint\" tendermint/tendermint:0.18.0 init",
    "tm:post-init:linux": "docker run -it --rm -v \"$(pwd)/tendermint:/tendermint\" -v \"$(pwd)/arch/linux/fix-tendermint-files-ownership.sh:/tmp/fix-tendermint-files-ownership.sh\" -e \"UID=$(id -u)\" -e \"GID=$(id -g)\" --entrypoint=/tmp/fix-tendermint-files-ownership.sh tendermint/tendermint:0.18.0 init",
    "tm:init:test": "docker run -it --rm -v \"$(pwd)/tendermint.test:/tendermint\" tendermint/tendermint:0.18.0 init",
    "tm:post-init:test:linux": "docker run -it --rm -v \"$(pwd)/tendermint.test:/tendermint\" -v \"$(pwd)/arch/linux/fix-tendermint-files-ownership.sh:/tmp/fix-tendermint-files-ownership.sh\" -e \"UID=$(id -u)\" -e \"GID=$(id -g)\" --entrypoint=/tmp/fix-tendermint-files-ownership.sh tendermint/tendermint:0.18.0 init",
{{- end}}
{{- if eq $store "fabricstore" }}
    "compose": "docker-compose -p {{input `name`}}-dev -f docker-compose.yml -f docker-compose.dev.yml -f fabric/docker-compose.yml",
    "compose:test": "docker-compose -p {{input `name`}}-test -f docker-compose.yml -f docker-compose.test.yml -f fabric/docker-compose.yml",
{{- else }}
    "compose": "docker-compose -p {{input `name`}}-dev -f docker-compose.yml -f docker-compose.dev.yml",
    "compose:test": "docker-compose -p {{input `name`}}-test -f docker-compose.yml -f docker-compose.test.yml",
{{- end }}
    "build": "indigo-cli run compose build",
    "build:test": "indigo-cli run compose:test build",
    "up": "indigo-cli run build && indigo-cli run compose up",
{{- if eq $store "fabricstore" }}
    "down": "indigo-cli run compose down && indigo-cli run clean",
{{- else }}
    "down": "indigo-cli run compose down",
{{- end}}
{{- if $require_tmstore }}
    "down:test": "indigo-cli run compose:test down; rm -rf tendermint.test",
    "down:test:linux": "indigo-cli run compose:test down; indigo-cli run tm:post-init:test:linux; rm -rf tendermint.test",
    "test": "indigo-cli run build:test && indigo-cli run tm:init:test && indigo-cli run compose:test run agent npm test",
{{- else }}
    "down:test": "indigo-cli run compose:test down",
    "test": "indigo-cli run build:test && indigo-cli run compose:test run agent npm test",
{{- end}}
{{- if eq $store "fabricstore" }}
    "clean": "indigo-cli run clean:fabric && indigo-cli run clean:couchdb",
    "clean:couchdb": "rm -rf fabric/data",
    "clean:fabric": "docker container rm $(docker container ls -a | grep dev-peer0.org1.example.com-pop-{{.chaincodeversion}} | awk '{print $1}') && docker rmi $(docker images | grep dev-peer0.org1.example.com-pop-{{.chaincodeversion}} | awk '{print $3}')",
{{- end}}
    "pull": "indigo-cli run compose pull",
    "push": "indigo-cli run compose push"
  }
}
